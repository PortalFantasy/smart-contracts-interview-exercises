{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xDc03d89270f1888CB7B6B9C3a0Ad6e588A243bb4",
    "txHash": "0xec454de7bb830572b03333dc0c764ced837b51b5e3506fd69816be86a678222c"
  },
  "proxies": [
    {
      "address": "0x28A590Fc2bFa9aCa38b05CAb65f05e35c850cd2f",
      "txHash": "0x0e46f63c850267c31fecbc16c987c479b4940b4c29221df522b020ef910878f6",
      "kind": "transparent"
    },
    {
      "address": "0x39b9AB8c64B93e07f1B68aa5DF93686f011bb935",
      "txHash": "0x378f58d6be8837a0427dc2de31cbd67fe9ff21b9b955de1e086cc170a9a73dfb",
      "kind": "transparent"
    },
    {
      "address": "0xD8AC7A4638D3907312dB4ef2AEA7Ed73DDaEb3E1",
      "txHash": "0x3df6e2e52816762035850ef53e3a5a4102a57b19789390e0aa3e39bbe36f0941",
      "kind": "transparent"
    },
    {
      "address": "0xEf1C5261eAC2B4edF7f6A0d684171260C3a167AD",
      "txHash": "0x9041bcfdb0592206d5bf3da2b9fefcd6d8275fbd74c3a63d0338a58ae1259033",
      "kind": "transparent"
    },
    {
      "address": "0x0E55C8100d29F459B9dBb1766ADF55691a7F81C1",
      "txHash": "0x0ae82cbe63e8b279b35f27d75d12cf5dc26b7a5cefe17f0df2679af18433c410",
      "kind": "transparent"
    },
    {
      "address": "0x65f0334e073ebc7A440907Ff731Aa1b650deF1e5",
      "txHash": "0xea80a1d591f3e0bd912631b730bdd3bb1ed9f18be9a39da9a5bbc4ff17848e85",
      "kind": "transparent"
    },
    {
      "address": "0x26E48F1a33339b064cD913BDA01917aD033C3Cb6",
      "txHash": "0xae09ebd3a4b0b2b2441f52e4d55542c84c735c6361fac6a0c83e997cdd84b6f4",
      "kind": "transparent"
    },
    {
      "address": "0x0872148B87Ad619C62b4aBEbb778FF970921D4a4",
      "txHash": "0xc0be382ea1f585189c4e41f6b8dc39c5952d6d44f6b05aa943d35a812cba8fe9",
      "kind": "transparent"
    },
    {
      "address": "0x98FB85F344BBfbb4548872699b9e73f18DA7881f",
      "txHash": "0x3aa186b4bbb2349b080a80795d37769c68288bab3290295e8c3ba3e0eff5426c",
      "kind": "transparent"
    },
    {
      "address": "0xc7E5630BeC332f052A7CdE511507490f36E16e7B",
      "txHash": "0xbe598edeac84789b92ceeb39b08a331ea21337a4c5b2779e7dfc0c1bb429a0a4",
      "kind": "transparent"
    },
    {
      "address": "0xb220b04A7d3cEc0cC3934cf376D0F837e3f8217c",
      "txHash": "0x4954ffc7452890595d67fcc5156177dcb69b009e6ada317f4373a572f23febd1",
      "kind": "transparent"
    },
    {
      "address": "0xa609DAbC8EdBE28a474088edf79E6216562Afd62",
      "txHash": "0xfab5004c4632fbb8fc483628b15db9dfce1732d803516e5f2aece956db763bc2",
      "kind": "transparent"
    },
    {
      "address": "0x3aDd352ab48be8d3bD668f968ac0627D88f0343f",
      "txHash": "0xeb1a46b5dc1cfdad1758a8645ec4456dc4120dee4cf21d557fa30ad719e3f3a3",
      "kind": "transparent"
    },
    {
      "address": "0x95Fd52245baBDea60b78Fa6E303435A68A2B3BFb",
      "txHash": "0xe884d38ef1737ac1b161ef801c21efce00f6ce1783156c7e1832bbdbdd147cda",
      "kind": "transparent"
    },
    {
      "address": "0x8614C0bb6F528d4C18A7563bEA2f2300BcfC03e0",
      "txHash": "0xada79773acc036b6eeba216bd50db8bec7ffa6eeb65ad93f5e03e35e6f360017",
      "kind": "transparent"
    },
    {
      "address": "0xF25d651141f9008D417C15313DDBFbab8d3e084D",
      "txHash": "0xa34a5725a3e9fa0f98010a91cd0a2c1d78a3300f63853ea9a443b4ee57ee465f",
      "kind": "transparent"
    },
    {
      "address": "0x59a9f9D913723C139341739653e3b5a202548B4a",
      "txHash": "0x7c9089f75e6b3d145b12e52046e32bc74079e7232f27505b5ae21ab2948f2032",
      "kind": "transparent"
    },
    {
      "address": "0xEC6a08EfFdCc0eb1d2972b8cA4a07dF8f336b35A",
      "txHash": "0xa4afe2507b2c426965da097378493f717fefdf4b230d3199c2b43e9554dd3c6d",
      "kind": "transparent"
    },
    {
      "address": "0x24D1dAA42bCFFe621132ccfBb9ac8D2366593A6a",
      "txHash": "0xffb8fd5baa31f833c7c51d7ece158687a6a1ce3baac800e720dca46100df99b8",
      "kind": "transparent"
    },
    {
      "address": "0x88d09D1A025aFCa11F636AF0B01b7ea175cD12e0",
      "txHash": "0xc69e08c72abf37aa983938b8666dc30783578c728f420bcb59ed05507ca60ceb",
      "kind": "transparent"
    },
    {
      "address": "0xfbC775c15D0B3DC2e2601B906e2B53949595f64E",
      "txHash": "0xb09c017c11cfb3b8424184a6133fd7a0e88d992deadf3f7be569392082430d52",
      "kind": "transparent"
    },
    {
      "address": "0x14D7c80BF207761e867e58d4301aDc6E8F9c8a12",
      "txHash": "0x373fc6df7dd7897b425d9e84cd35af087bd1dab5e21485b65a0d2eadd6d172e6",
      "kind": "transparent"
    },
    {
      "address": "0xb5c8e641742f9c348892AAAEEDe4F467953416E7",
      "txHash": "0xb4da6813be92db88da44ca57e9d1851cbd98c5a26a134e4261bb2fab22cbdde2",
      "kind": "transparent"
    },
    {
      "address": "0x348E265a661F7f0601445cC4E514010689A0075B",
      "txHash": "0xe6503867f06e1592cb5f50c2538af5bc02094d2fa97bafc4bba3bf4b65797cf7",
      "kind": "transparent"
    },
    {
      "address": "0x4079e2323bbB817787Ac2b4Df534DBfe30EFCEB0",
      "txHash": "0x1ab9732e1372865889e1d3d0f4521671eb2b44cbc5c491f5066a6a23c1b04dfc",
      "kind": "transparent"
    },
    {
      "address": "0xc123EFdB47Aad761928e8289Dd067d823b65F910",
      "txHash": "0x47ef44463d877302b58233415817cebdcb2b5f4f8e5a0a6aa708d46226eeb590",
      "kind": "transparent"
    },
    {
      "address": "0xd6DF18551E7Fd31F81aD7410ffeCCDb20E187494",
      "txHash": "0xe66e89d74ee2a110f7fc843c69a8f49b07e430a46c4563cc8de8cfef1f84149c",
      "kind": "transparent"
    },
    {
      "address": "0xEA88fCEc8f399d46810c1AEC37eeA6BF51CB9eBc",
      "txHash": "0xbf12ee5b21ff7a5e3d90b986954cd1d32bb164c0feaf6142a250543d9970e44c",
      "kind": "transparent"
    },
    {
      "address": "0x305c64dB90aF19d6CCfc69028177e04DFdd03e59",
      "txHash": "0x64298b77e0b52c6147ab14cfad8131e54748e04b299a45eccaaaec5b30b169a5",
      "kind": "transparent"
    },
    {
      "address": "0xD40bC054a27E37EF9ab50C4D47dAA01CDBaBd997",
      "txHash": "0x28e117fd490056d97c7879f25c2495c36fa528ac0df28f2294998e78ab6f65c4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3b8209b45f3265ed8de754c531d5513634f1de7164d9ecb63b2987de1ac29b16": {
      "address": "0x663887fd9add3B6311A69F3fe22713a5FC6D8e87",
      "txHash": "0x522f55780f1b1184d23173a5d2da67e77e2478e39ef7c673582be63848c2c1e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PFTUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/PFTUpgradeable.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b02a2f7473cb23d33d9c59a867e5b60e4675151947263e0c6c12cf22cdbf80bf": {
      "address": "0x8A1ddA0dFebDC150bD3E21ABFfE5BA787A3ED14F",
      "txHash": "0x1e25ef7dcf572333ae815243f2ead2845720871bed1c56b275246d80aca39521",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PORBUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/PORBUpgradeable.sol:16"
          },
          {
            "contract": "PORBUpgradeable",
            "label": "callerToClaimId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/upgradeable/PORBUpgradeable.sol:19"
          },
          {
            "contract": "PORBUpgradeable",
            "label": "PORBVault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PORBUpgradeable.sol:22"
          },
          {
            "contract": "PORBUpgradeable",
            "label": "PORBVaultTransferSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PORBUpgradeable.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2c0440e1707f0f01ec052f71a150d4f4407e6ced142bd2534c067485d2ec1687": {
      "address": "0x35FdecA48CeAa0ceC9F3C4BB33D016c1F5AbDDed",
      "txHash": "0x47114677ab3476bf6e681d02712fc7d7b70d24e24947d62e76a135a05f21736c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)9902_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)4762_storage",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:21"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:23"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "mintPriceInAVAX",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:26"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "mintPriceInPORB",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:29"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "PORB",
            "type": "t_contract(IERC20)7344",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:32"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)4762_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20)7344": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)9902_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d2268e0678014f0a8fb6c759725deb5b6ecfa4f8f59216820bab816b3f342ebc": {
      "address": "0x2047b79e5CC26775f372d2FfF103f91882e7CDc7",
      "txHash": "0x01534197e8a61e3cd60aaa1049558a50dfc17d9c6c5578dfe970fb7c3f15fc32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)9902_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)4762_storage",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:21"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:23"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "mintPriceInAVAX",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:26"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "mintPriceInPORB",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:29"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "PORB",
            "type": "t_contract(IERC20)7344",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:32"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)4762_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20)7344": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)9902_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f95dfc9c46507059ca7e24599b0acba37e3644dc2071a1f8e804eca6309eac7b": {
      "address": "0xC2d3E59479ED64A677121E0de55fe310c82CCF8E",
      "txHash": "0x356e7ef0085c6200977c66bdf282b2f4645c2d22780b3e1eb053e80372762bc9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)9902_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)4762_storage",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:21"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:23"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "mintPriceInAVAX",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:26"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "mintPriceInPORB",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:29"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "PORB",
            "type": "t_contract(IERC20)7344",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:32"
          },
          {
            "contract": "CosmeticsUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/CosmeticsUpgradeable.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)4762_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20)7344": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)9902_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3238735068e48451e2830905b5487229749f16455003e9f1a61064e27c1c1dc0": {
      "address": "0xfF31Fb073B49c615496Cd720F5B420a56c016E54",
      "txHash": "0x40e6e2d365b9876f79aafddf925decdbd0d9fc85f52ec4ebac34f38de2668a72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)9902_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:18"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "mintSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:21"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:24"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)9902_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9902_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b01e8ab9229dfb971a709e8aa733c3118cf1372961db50a8caf1e4db73c381be": {
      "address": "0xD7F88EBCa7FB078D4d0AB0A35de916b4a97ae469",
      "txHash": "0x965e0144769045f461303c050bac8f7194d7460d0a791c12e82438d7fb8bbb7b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "WAVAXAddress",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:78"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)15782_storage))",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:80"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "collectionsWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)15782_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)15782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)15782_storage": {
            "label": "struct NFTMarketplaceUpgradeable.Listing",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d51f84906bda2847e09a819bee5ca0f6414ede3dfa644edb4a96f9c92d5e55ab": {
      "address": "0x85cdD54170fd3A228d75FeC20BD7071A577c2E8b",
      "txHash": "0x2ccc64a836255af108059453ffb189029526ef37773892aae7719b03ec4ab7db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "claimer",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:32"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "PFT",
            "type": "t_contract(IERC20Upgradeable)11164",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:34"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "tokenGrants",
            "type": "t_mapping(t_address,t_struct(Grant)16827_storage)",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:37"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "totalClaimedByAll",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)11164": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_struct(Grant)16827_storage)": {
            "label": "mapping(address => struct VestingVaultUpgradeable.Grant)"
          },
          "t_struct(Grant)16827_storage": {
            "label": "struct VestingVaultUpgradeable.Grant",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vestingDuration",
                "type": "t_uint16"
              },
              {
                "label": "monthsClaimed",
                "type": "t_uint16"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8434595ff49be6cbd6e71011b48489693fe1f1a619fb6e1243b8cefad1795af3": {
      "address": "0x6d5A9528E43464a1D9e802Bd568440000c44CE3b",
      "txHash": "0xec396c867e9c95e774ae84c085fe9731a7835933e648833c7a8e7812411755e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "VestingVaultUpgradeableTest",
            "label": "claimer",
            "type": "t_address",
            "src": "../project:/contracts/test/VestingVaultUpgradeableTest.sol:34"
          },
          {
            "contract": "VestingVaultUpgradeableTest",
            "label": "PFT",
            "type": "t_contract(IERC20Upgradeable)11164",
            "src": "../project:/contracts/test/VestingVaultUpgradeableTest.sol:36"
          },
          {
            "contract": "VestingVaultUpgradeableTest",
            "label": "tokenGrants",
            "type": "t_mapping(t_address,t_struct(Grant)14372_storage)",
            "src": "../project:/contracts/test/VestingVaultUpgradeableTest.sol:39"
          },
          {
            "contract": "VestingVaultUpgradeableTest",
            "label": "totalClaimedByAll",
            "type": "t_uint256",
            "src": "../project:/contracts/test/VestingVaultUpgradeableTest.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)11164": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_struct(Grant)14372_storage)": {
            "label": "mapping(address => struct VestingVaultUpgradeableTest.Grant)"
          },
          "t_struct(Grant)14372_storage": {
            "label": "struct VestingVaultUpgradeableTest.Grant",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vestingDuration",
                "type": "t_uint16"
              },
              {
                "label": "monthsClaimed",
                "type": "t_uint16"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
