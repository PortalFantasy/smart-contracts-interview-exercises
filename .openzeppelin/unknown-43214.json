{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb24E66C30A6124864c4D92097CE812A3B05f426E",
    "txHash": "0xecd4dc95925d4a873e92a8d1df3f1a0ec45f7eb18f9e46007549fed69a63c3cc"
  },
  "proxies": [
    {
      "address": "0x8D85A7284b9a0Ee14D80B11d7E3689130C9a85BE",
      "txHash": "0x92fc15bc95746fb7b65df2cc5ade33f2662a5b0d9c24dec1442e0a782e4234c1",
      "kind": "transparent"
    },
    {
      "address": "0xc95DA9F2CA1DB952803e206f2Cc5feFf7Fbbe271",
      "txHash": "0x933dd6141a1538b301d2152f91364cb99aad77732052cecfcf12dfcf98c8d38e",
      "kind": "transparent"
    },
    {
      "address": "0xbC29D75D9e4D688D369fb2D9493015ce8FA20000",
      "txHash": "0xc4aac9de1c1e66a10159044224827ee334ea0eeb5f7630e94cf1b9c8a024b4d9",
      "kind": "transparent"
    },
    {
      "address": "0x691223c9aE0933Ff6AD8eA448630275F5E3a20ed",
      "txHash": "0x30a05843c84db4126e22691faf3222efd769de79ff073fc646f19a190647a6fc",
      "kind": "transparent"
    },
    {
      "address": "0x5a5835B14137ff5FD7051d721491978cAF2924fe",
      "txHash": "0xe82e900c1e638bf687c05abc9cc51227f9acfa9ac7691f31d862fcb2cc383a87",
      "kind": "transparent"
    },
    {
      "address": "0x68121AD0B7376C78b0519f8c1D05dA5E3f9E80f1",
      "txHash": "0xe576238ea6b1aa98533124109dc69889400ba5755c6e08f905e6d5e2369f12e0",
      "kind": "transparent"
    },
    {
      "address": "0xCAdC0fEE05BC84a3343e927446FB5dA67bdaD53E",
      "txHash": "0x976928489069b10d9c858ce8e381f8121a0541926548f6e5c9c56d15f13da8fc",
      "kind": "transparent"
    },
    {
      "address": "0xd97AA0a683531a38d822d3603aF3aEdc1dF7d864",
      "txHash": "0x89db2f677bc4cc85f4dd13d3cbd280b493f71416f6886331037908d055745a26",
      "kind": "transparent"
    },
    {
      "address": "0x3861fd24Cc3f0810193425e6b2005572c6AF67c6",
      "txHash": "0xc42e4f258c4928342ba1139620f85fbf3caa8621afab9424ff6613b3a20029c2",
      "kind": "transparent"
    },
    {
      "address": "0x387155d85E031C18811Fda4E63E2D395E387da59",
      "txHash": "0xa8db748c0150b5d856dbdaab585b681215396e64c655f9161f8cbece568f7d59",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3b8209b45f3265ed8de754c531d5513634f1de7164d9ecb63b2987de1ac29b16": {
      "address": "0xE3e97041Bd03465103FEAF7277b449ae94dbb2B5",
      "txHash": "0xea8f03f5a879c8d493c95387d46d49b71bfb16e62ab94642402ae8d882cda5a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PFTUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/PFTUpgradeable.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3cce55ed0e088557ee01f84dcf588e14909d4eb75d3d891d3b7168301db280c7": {
      "address": "0x9ddcc1b2548a6F6365330D3C7f2112611F5E9A2A",
      "txHash": "0x35b0288da446b6ddbc6f36d0a077d0001f8d48cb37f0759e176bc711c17e1db2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "userPaymentsInfo",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:22"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "callerToClaimId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:25"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "PFTVaultTransferSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9f2efc6c2c60b6596a1fa5e8c354c2942f6d59e7bf32bb617ad58a4bb37cd464": {
      "address": "0xb096a549E8C838deFE498eD1B5a15fAC316b4bf3",
      "txHash": "0xfa9bd6c8c29897a3c6daeb43f87689f9789e2387c769be6dd08d591dac5bb0d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PFTStakingUpgradeable",
            "label": "userStakes",
            "type": "t_mapping(t_address,t_struct(StakeInfo)16700_storage)",
            "src": "../project:/contracts/upgradeable/PFTStakingUpgradeable.sol:22"
          },
          {
            "contract": "PFTStakingUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/PFTStakingUpgradeable.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(StakeInfo)16700_storage)": {
            "label": "mapping(address => struct PFTStakingUpgradeable.StakeInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(StakeInfo)16700_storage": {
            "label": "struct PFTStakingUpgradeable.StakeInfo",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "49d63d22bc9da9044ce7074f060eb4314ebf2cce817495221bf58081c33ab17f": {
      "address": "0x5F0ef074902204a589b91841888D6d0A9BD7c7EB",
      "txHash": "0xbef18a49edc47cc65c1a7a7c4a78da3ef9b6639e812d8d2f8adae2034a249d35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "USDPUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/USDPUpgradeable.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9741402efd5e5656d136a1c51c53c5deff976a65890cd4abfdb09c41ce90e97d": {
      "address": "0xE8585c9566A744e080b9a471Ec5C7B23b2241a48",
      "txHash": "0x2c3a0d404463c9d3ca1c8fa3e56373afe0523e45acaaf3a1a31aeee2f9717333",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)10003_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)8844_storage",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:21"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:23"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "mintPriceInUSDP",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:26"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)11265",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:29"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:32"
          }
        ],
        "types": {
          "t_struct(Counter)8844_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20Upgradeable)11265": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)10003_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "baebd19c57d4bd6c7649c25455423327a5a97620f6ff4fc031ef2a3c5186270e": {
      "address": "0x73dE8f58312897cc4784db2D734D28867e6aa5A2",
      "txHash": "0xffe08b85f8efb913a5d79e15dd60972252cec87c7caa968412369a21b3feb8b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)10003_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)8844_storage",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:21"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:23"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "mintPriceInUSDP",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:26"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)11265",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:29"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:32"
          }
        ],
        "types": {
          "t_struct(Counter)8844_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20Upgradeable)11265": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)10003_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0e186cde75b6b43258b1adb36f65c99df65457752829ebdaa20baac3cc26c373": {
      "address": "0x5C7Bbf114B08aB447A78D65E6BFd644996195bf0",
      "txHash": "0x6648e155471a2996d13268c5e885fec323047ae970c124f3c3f8992e9f45a6f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)10003_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)8844_storage",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:21"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:23"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "mintPriceInUSDP",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:26"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)11265",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:29"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:32"
          }
        ],
        "types": {
          "t_struct(Counter)8844_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IERC20Upgradeable)11265": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)10003_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "81eacfebf4ffa7b3fee3407d9f2cdbadc5cd83270a66b309b71b49a315a1fbfc": {
      "address": "0x102A48dB4043d2f2a4A3C78C50e1401919796019",
      "txHash": "0x35f7a5dd937183c5439578d1a6884db28b92995b63fbf8e57f00cc27d8d81a6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)10003_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:18"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "mintSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:21"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:24"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)10003_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)10003_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b01e8ab9229dfb971a709e8aa733c3118cf1372961db50a8caf1e4db73c381be": {
      "address": "0x1Cf8df09F88A88c3a02bf7ab51f589f132DCD620",
      "txHash": "0x95a0c679449e8b34eb62f70b22ae93f78ab8d30228b2c5d8a19dcc91471a5982",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "USDPAddress",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:78"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)16219_storage))",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:80"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "collectionsWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)16219_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)16219_storage)": {
            "label": "mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)16219_storage": {
            "label": "struct NFTMarketplaceUpgradeable.Listing",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e4516843ecf8adb242b98de3815f0baaf8a9d0d844e300b8170b2a8c680ec433": {
      "address": "0xA12670C2dCC0b28307ae851DC6159bE3c1e21E9E",
      "txHash": "0x04ffd86fe8eae1e9e07f81e093537824c25c7475722a339421f965d0d2378d75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "claimer",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:36"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "PFT",
            "type": "t_contract(IERC20Upgradeable)11265",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:38"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "tokenGrants",
            "type": "t_mapping(t_address,t_struct(Grant)18085_storage)",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:41"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "totalClaimedByAll",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)11265": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_struct(Grant)18085_storage)": {
            "label": "mapping(address => struct VestingVaultUpgradeable.Grant)"
          },
          "t_struct(Grant)18085_storage": {
            "label": "struct VestingVaultUpgradeable.Grant",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vestingDuration",
                "type": "t_uint16"
              },
              {
                "label": "monthsClaimed",
                "type": "t_uint16"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
