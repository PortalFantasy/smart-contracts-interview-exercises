{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6Ee557D5F2B1829f8c355f19e769c8514ec4ec73",
    "txHash": "0x7a145ecfa94834c8806a61f902a6b00d20603126ff5f7f6a3271c4160e0c6fe1"
  },
  "proxies": [
    {
      "address": "0x913E6c63584E3335f3d5edc10890E6e61fA39D2B",
      "txHash": "0xb903c21a218619ea0667c5a5b7da3ebf0c2b255b11921e6fdba66cffd0571481",
      "kind": "transparent"
    },
    {
      "address": "0xD4BD631bdF644272267Ae52A86F56207727Cde3e",
      "txHash": "0xc5ad58fe2375d58e219f20cb24ac890e250338937939d2c44df24ae6d7f6ed25",
      "kind": "transparent"
    },
    {
      "address": "0x143B307d071d5Aa13c5C081791b071AbBd0385c8",
      "txHash": "0x2d79a4d5492e693d5905febd4b195da7eea2e47e0310531ed224bbfc9c8b0850",
      "kind": "transparent"
    },
    {
      "address": "0x442a26318722CA773EE21cEc31a0417B1a6E1fe5",
      "txHash": "0xad1f8208fb3c5bd4d533c9afe924d985debdd14d33f8162e3a4a99a0f70cfc2c",
      "kind": "transparent"
    },
    {
      "address": "0x58B30cF082bE6520c8f7827181788afb6af52914",
      "txHash": "0xde9c0fc15e85c53ec8f93616b3819f7a8b8b52e3148a69ec41d41a5b317c6d4d",
      "kind": "transparent"
    },
    {
      "address": "0xEc11fb39Df6070F28c4369A243cAf5e2D32C4107",
      "txHash": "0x68052e5ee1dc6a19990a9b04eb53b51a57755112aba654d17636229b49b55436",
      "kind": "transparent"
    },
    {
      "address": "0x1Fcd2573A27eDCa2333560D456b094e6EEa9747b",
      "txHash": "0xb85c78068c380c3bb3efa75de65d18bdd4419778ad1a33f028c554b007cb044a",
      "kind": "transparent"
    },
    {
      "address": "0xAb85Bf03dDC3d6A8CFff7fd44f7BDaD77E40576C",
      "txHash": "0x641084c1384a11bd3353f8c2ad1e9cfe4c16c0a49caf07632fdcf3eef09d4fc2",
      "kind": "transparent"
    },
    {
      "address": "0xD5b79F757BC6aA542339F50F13931Ba21fE783F2",
      "txHash": "0x3192f5c5671301f0567ee5128abf6837b0ea4c69ec7cd23ee172fb8a7630f036",
      "kind": "transparent"
    },
    {
      "address": "0xeed6D35e590e8D796E7Aab9363E04AA4605Df947",
      "txHash": "0x0775a9ad8efca8a6b68e56cadf00deea1e45e085d03732dc4820eec372d60fff",
      "kind": "transparent"
    },
    {
      "address": "0xf389ef27fA82Dd6B6c190f3cC3E58Ec91ac8BE92",
      "txHash": "0x6312b4ee1efcc2828ba2b151f3306a4e29735b44f8b8fe6d0f8d8cfb7df52fdf",
      "kind": "transparent"
    },
    {
      "address": "0xf4D0F7566DC0A18815Ee90B02f8E6b16b88b97f1",
      "txHash": "0xa4f651f50d992eb2fca2ce250f6a83aff8dc2bf46185c08da78d0615275c9202",
      "kind": "transparent"
    },
    {
      "address": "0x8D6b88AD374A06f84d24269e0ab75E437F79a234",
      "txHash": "0x70f311e4913b837f03246fdae824e638c47efd6622a4b3e5573701533dcac512",
      "kind": "transparent"
    },
    {
      "address": "0x56fdCD2ff865eB9dEc71038a91aFa57b67605C4b",
      "txHash": "0xa0a263b0a716500e3835a7bd382981bfce66e3d9820426d9e39aac7a9fbfe9fc",
      "kind": "transparent"
    },
    {
      "address": "0x2769838Ac5977918aE3b5C6d46C6e3F69F57ff99",
      "txHash": "0x2fea9949c6f2026d4a00717695933aacfd8d0842bf6c0200b40af19e73f5c747",
      "kind": "transparent"
    },
    {
      "address": "0xb91460612B10DD134a385fF2Db33909D412B5AB9",
      "txHash": "0x5ecb9860bb818ea6c1e623d9053fcc306018c518c9841c355c8c24a2481846e0",
      "kind": "transparent"
    },
    {
      "address": "0xE410F32d1287136595260C7d720E54198405C646",
      "txHash": "0x74d1f13ccecced2577eb366aed709a434616dcc7a87c2423febec5c0ee38cc24",
      "kind": "transparent"
    },
    {
      "address": "0x96dFE0885C7C78641Dd0267AAEFCDbA3AD5654f6",
      "txHash": "0x975ecd0e601930e0dfc895118f4884c9836278c5491250da0c0b94174c9520ee",
      "kind": "transparent"
    },
    {
      "address": "0x246491D26d400368D1D7b68Cd1EC3951d0e94778",
      "txHash": "0x6736d1eec70ff4b1aeaa70284e0b92a368ee3183a456b473757663f836184e75",
      "kind": "transparent"
    },
    {
      "address": "0x4817944d765a9e02Eba3c92f86A3695F5A0ff424",
      "txHash": "0x13a995e897ba7b625575d662bbb54edba400d1672bc728d121330a77f821d11a",
      "kind": "transparent"
    },
    {
      "address": "0x1ec030F3327b2342B79ecE3C34A2A3706FB46081",
      "txHash": "0x959c3c1da7400efbf31381e73aee0ab237a4c02cd9f5187cbe309b7d1fff8786",
      "kind": "transparent"
    },
    {
      "address": "0xDEFc70f3d7CF28AA06BE291cB4CBF64a9c61CD1E",
      "txHash": "0x3753b6cf2eab3e0943923ba963171333f1e8ada6d9ed9d4a44e9a2e9c1dc7f52",
      "kind": "transparent"
    },
    {
      "address": "0xeE83155D57739e49f0b0cDc36f18aC7da2C56A72",
      "txHash": "0x94aaaf702057cd644e44517291f502ab739cb61ba6a3a6c512cdba84116dd400",
      "kind": "transparent"
    },
    {
      "address": "0x00372980Fbd74Ee10764393e5Cc314141112a2a4",
      "txHash": "0x0c394ef165c091be783d9818aec1e4d23e8a85c6d677ee2cc7ea85b90809325a",
      "kind": "transparent"
    },
    {
      "address": "0xC63aDAeEd80e8448eeE800c5f6D4487580218c37",
      "txHash": "0xc4cbc2e272799edc54da450dd4b0ba8ac7aaf226ba18698275eec8a05c13b35b",
      "kind": "transparent"
    },
    {
      "address": "0x30ad00f8Ec7d2039634A8a7FC4f86fa8AA5310ff",
      "txHash": "0x321e166cb2dbded49a084dd01a049f5f734d872bb0b2aff1a8241a4b53ac62ef",
      "kind": "transparent"
    },
    {
      "address": "0xFB687eAC951715f23e96BfCb55bDce8B7d281098",
      "txHash": "0x827c43c74c614eadc73a76cb3371a50efa3109e972a73dd982fc768bdbbf655b",
      "kind": "transparent"
    },
    {
      "address": "0x5Bb692323E65E44754Da26B28636aC04C9a9D2cA",
      "txHash": "0x0b0e1bde08c14eea6664360c6b7e102177ea3c55d81b7f90510214c77d17a329",
      "kind": "transparent"
    },
    {
      "address": "0x75F1B8712f733D86789bDA6a638C31b724815619",
      "txHash": "0x82222158b83d71dec36e57e582495360dbf925244d065cb1c72cf279ea9e4725",
      "kind": "transparent"
    },
    {
      "address": "0xEfC33FAf98b4B88BF76bfD545985bbed3CdBa043",
      "txHash": "0xd29075919dc0ec67898592e5f6cbda3e7608d522a7b8e6b7d06530b9fcb01bbd",
      "kind": "transparent"
    },
    {
      "address": "0x7D28F343b0A43aE50d586797E119680fbEF24c0e",
      "txHash": "0xc67fde13a0ab6e2976db3015c34ec86019383d6dde8dec871abd8135b54f0e5a",
      "kind": "transparent"
    },
    {
      "address": "0x87FcF17c2537Fda88FeA7E7971237Cf5af8f1FFc",
      "txHash": "0x642e2c4bbb91c529cd656362b711439fc2ac0859f41fe7cf81d82c6196197420",
      "kind": "transparent"
    },
    {
      "address": "0xFF35A0aEFbe7f49D7456AAE0F687AEBE472Ef775",
      "txHash": "0x5d70b177c21db5753f2f657100db599c6568998264445e756b2dfd852a450597",
      "kind": "transparent"
    },
    {
      "address": "0xdF94A6F0a9EFFE8Af33894Ae99aF9077d54F2bd7",
      "txHash": "0xfb6202597957bc551a821a6ed9e1ff287ab8fd507a0c1ff3b4944afd36e5079a",
      "kind": "transparent"
    },
    {
      "address": "0x4D87599C975aF5cB77196D419Ec74c884d35B436",
      "txHash": "0x22dec07b682fe899d1f7d32323238a1aed735ff6e1b265f73f7fe0eecc90a72f",
      "kind": "transparent"
    },
    {
      "address": "0x3A8888a9c9BcAaf80336e8Debd5Eb485D2D7eABa",
      "txHash": "0x8ac75e0353dd31e70ca53258bf1f2a946535a95bbd5a79521a00381667f1a485",
      "kind": "transparent"
    },
    {
      "address": "0x928D0CBd9853c652d42b00a2A176eb56fc295980",
      "txHash": "0x1d34cfd5f3eb201dea2cb0e0e09fd4796ce827bebc26226b2c7f2b96ae1e9822",
      "kind": "transparent"
    },
    {
      "address": "0x6E65a3F8aCB801A8B6bA4fcc9374D9Cf7232BB5E",
      "txHash": "0x37d1aa120013c6f320151fe1d05766e45bd5caf35c090e6642d5b459857e505f",
      "kind": "transparent"
    },
    {
      "address": "0xF7DB37ADC3887a1a586696423ec0dBdC12097737",
      "txHash": "0x86f23c747e23fa54b050791cec0d91f0d222f76f5ff399a30f05fd8d177961fc",
      "kind": "transparent"
    },
    {
      "address": "0x39270CA63E04d598c9236cD7F3eb3B874164A107",
      "txHash": "0x6a81adbab698d38fbe97c83a6c010999857956a35cf04c513a4381be7514fbab",
      "kind": "transparent"
    },
    {
      "address": "0x43f97ce89d9A8414baFd882b175C8414cA4eD7A0",
      "txHash": "0xc2887d9c1010eecc2f0a3866fb8098a0fe676b65e5a7738240fea0b313c3f039",
      "kind": "transparent"
    },
    {
      "address": "0x78983454cD75882be80Da23855069cEd6192AFc7",
      "txHash": "0xcb9df9d8afc39a59e1e08ed55b7db3b7b073085208e9d6e3dbaa626623001f73",
      "kind": "transparent"
    },
    {
      "address": "0xf8Bbd4597b7fC85a6c7F677B942B5Da68ad1aA43",
      "txHash": "0xc1f3f28100276313b41a2f76ad3c8d647303b229997171cf79fe78cc1401583d",
      "kind": "transparent"
    },
    {
      "address": "0x8367D27fDEa57230e7B8b9Bbb5e2c1cc1c0d60AC",
      "txHash": "0x8193c9b058d34266a03d8a3190c52709531d7362eee17ac5e91e4ff40ba05da3",
      "kind": "transparent"
    },
    {
      "address": "0xB218b490917d3bC7aa036Ab32409E9bA12d66aC6",
      "txHash": "0xf8a1ccacb2837ded52e094d2518dac5a665644f376d986e8639c0909678f44dc",
      "kind": "transparent"
    }
  ],
  "impls": {
    "eec03fd546aca8a0dba705f1930cc30e1a19797998acb4f8a788cbf229fec4b9": {
      "address": "0x41B8213068ed9821C1D0ba26A1787c351Fb3af8B",
      "txHash": "0x02d905a1cf8963f1092ff2e6c782cf1314c8f31601f66856665f1b25ddb7f033",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "lzEndpoint",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)12810",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:19"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "trustedRemoteLookup",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:20"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "minDstGasLookup",
            "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:21"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:197"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "failedMessages",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:115"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "OFT20CoreUpgradeable",
            "label": "useCustomAdapterParams",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/OFT20CoreUpgradeable.sol:17"
          },
          {
            "contract": "OFT20CoreUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/OFT20CoreUpgradeable.sol:176"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OFT20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/OFT20Upgradeable.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)12810": {
            "label": "contract ILayerZeroEndpointUpgradeable"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)"
          },
          "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9c689f623dcc3153a255a3c6fa7c218caea91f4ef6d866b7f748ad392dffd9a8": {
      "address": "0xD22c6C6A717AD7dCD85Dff9123AB9690932D257d",
      "txHash": "0x103d0e3074b162434bcdf1cabfc1f465ccbf5f3c1361f20f5797f0aa4b52c1a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "lzEndpoint",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)12810",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:19"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "trustedRemoteLookup",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:20"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "minDstGasLookup",
            "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:21"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:197"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "failedMessages",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:115"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "NativeProxyOFT20Upgradeable",
            "label": "useCustomAdapterParams",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/NativeProxyOFT20Upgradeable.sol:21"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)12810": {
            "label": "contract ILayerZeroEndpointUpgradeable"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)"
          },
          "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d239dc4cb1a652189ff3678b44e885d0bb01a89a3d8a8f3d3b7211d4d9fedac5": {
      "address": "0x74e848B9E1A5372021EB196433b5FbCDA82c7300",
      "txHash": "0x50e30b006781f16ff35db15a83e1e787d6dcad18503d3f49f52c157450ac6e17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "lzEndpoint",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)12810",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:19"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "trustedRemoteLookup",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:20"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "minDstGasLookup",
            "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:21"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:197"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "failedMessages",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:115"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "NativeProxyOFT20Upgradeable",
            "label": "useCustomAdapterParams",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/NativeProxyOFT20Upgradeable.sol:21"
          },
          {
            "contract": "OPFTNativeUpgradeableTest",
            "label": "testNum",
            "type": "t_uint256",
            "src": "../project:/contracts/test/OPFTNativeUpgradeableTest.sol:10"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)12810": {
            "label": "contract ILayerZeroEndpointUpgradeable"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)"
          },
          "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c1c6a914c14a9731cbbc98a6ae294115e84e1c26d1297d1df9e91dfb926e215d": {
      "address": "0xdd8CA088CC88E2A6895e40e6B7AbaEB2264860fd",
      "txHash": "0x8a38e7514933de735897d0007dcf8cc3a5d4b96bf547a6ed6c52fd1ac6667e3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "lzEndpoint",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)12810",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:19"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "trustedRemoteLookup",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:20"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "minDstGasLookup",
            "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:21"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:197"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "failedMessages",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:115"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "NativeProxyOFT20Upgradeable",
            "label": "useCustomAdapterParams",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/NativeProxyOFT20Upgradeable.sol:21"
          },
          {
            "contract": "OPFTNativeUpgradeableTest",
            "label": "testNum",
            "type": "t_uint256",
            "src": "../project:/contracts/test/OPFTNativeUpgradeableTest.sol:10"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)12810": {
            "label": "contract ILayerZeroEndpointUpgradeable"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)"
          },
          "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "1e8aa46c1bb6b1649f1b6ba1d8b5973e6f77b5c614c1853fe74d030e3f2e1a3f": {
      "address": "0x6f68F442d0F54fFF208adEB0B55b01666A8abe34",
      "txHash": "0xe40a9a8010fbe46d42464e1be80736a0dbb5f7f39374ae25b11328fce3ecdaa9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "userPaymentsInfo",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:22"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "callerToClaimId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:25"
          },
          {
            "contract": "TokenVaultUpgradeable",
            "label": "PFTVaultTransferSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/TokenVaultUpgradeable.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d9e077ca9483c5de418ff5f984661dec0bd17f6e0e42383c3908cb04550d665e": {
      "address": "0x2490D85dFA570681dABaD5b174d33B12f5781D71",
      "txHash": "0xb2cdc98440104b1cfedd8d104c247c2c4cf7d0b2a479f7c0f76a0e01f2adc4ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PFTStakingUpgradeable",
            "label": "userStakes",
            "type": "t_mapping(t_address,t_struct(StakeInfo)21040_storage)",
            "src": "../project:/contracts/upgradeable/PFTStakingUpgradeable.sol:22"
          },
          {
            "contract": "PFTStakingUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/PFTStakingUpgradeable.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(StakeInfo)21040_storage)": {
            "label": "mapping(address => struct PFTStakingUpgradeable.StakeInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(StakeInfo)21040_storage": {
            "label": "struct PFTStakingUpgradeable.StakeInfo",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd3117e7e3844dba13d1be00e337abb0271fda76cdf44ac82e896d40087a245d": {
      "address": "0x0eB45DC90D0F3cA78C3a55d14FB67c44fb20bfA7",
      "txHash": "0x5e2fad666a493bf7d59ddfbc0242142b3fa2c5fe54a372b081608732cd9a159c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "USDPUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/USDPUpgradeable.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "377a10d0a53d8ef9299018e0d943873c02bdd94290da0ee80792e68552741727": {
      "address": "0x1aA071DCB6910E9d00d99ab1Eb7f0FA8CA4D2F07",
      "txHash": "0x25b4ea84cd5a353591938ca019759b2d8d17df0f68cc0592f6508aef9108f8a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)11223_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:20"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "mintSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:23"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)12485",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:26"
          },
          {
            "contract": "HeroUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/HeroUpgradeable.sol:29"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)12485": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)11223_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bca6b8007db9a0a3a0cee6cc6376c9e4c17f3800b658399d52ac546915bb6553": {
      "address": "0x10Ef7Be40dfE85a2cD2EcffB778C2ABDE9AA049C",
      "txHash": "0xbba9643ce41f85c64b3dc906db5d970dff953dd8f36f8c3535e38760be381c45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)11223_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:20"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "mintSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:23"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)12485",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:26"
          },
          {
            "contract": "ArchitectUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/ArchitectUpgradeable.sol:29"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)12485": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)11223_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "49a7ae98907b4a7d1b81ed454c28c53678edaadef596c2ded927df65c4596dbe": {
      "address": "0x16AfAA6fc1D74eB8d3199A14746c3a3485c2709f",
      "txHash": "0x90cc5a0ce86bb1c27b6186c039ca446742122cafd2e8dec107356833f371f581",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)11223_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:20"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "mintSigner",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:23"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "USDP",
            "type": "t_contract(IERC20Upgradeable)12485",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:26"
          },
          {
            "contract": "GeneralNFTsUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/GeneralNFTsUpgradeable.sol:29"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)12485": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)11223_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "df89a2644916b3c30c1c7bb731fb6783950d7b2104a8377b0a3847d85d2f6803": {
      "address": "0x024005377B1E8c06C23A5e6eff51e9D72d6C30C3",
      "txHash": "0x59f2a356900feaa4f7cf2e8e59239cc11c41def285d0c6632be579bd1929d7b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)11223_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:39"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:40"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC2981Upgradeable.sol:150"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721Upgradeable.sol:553"
          },
          {
            "contract": "ERC721RoyaltyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC721RoyaltyUpgradeable.sol:59"
          },
          {
            "contract": "ContractURIStorageUpgradeable",
            "label": "contractURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ContractURIStorageUpgradeable.sol:11"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/draft-EIP712Upgradeable.sol:148"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/PausableUpgradeable.sol:116"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "baseURIString",
            "type": "t_string_storage",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:18"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "signer",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:21"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "vault",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:24"
          },
          {
            "contract": "PorbleUpgradeable",
            "label": "userFusionInfo",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/upgradeable/PorbleUpgradeable.sol:28"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_struct(RoyaltyInfo)11223_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)11223_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f578a35c9f16119d26b412e7cbec352863ea914a7d8e1c1b304699b98ddd241b": {
      "address": "0xa22F5e75F00343D9ad44c7017dE3f5faE1CDDfBa",
      "txHash": "0x58e8ebd0a1a21065685fc20fdbdb4ae3b6f9909c6181a720ef4d10cc4f009acc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "USDPAddress",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:78"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)20515_storage))",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:80"
          },
          {
            "contract": "NFTMarketplaceUpgradeable",
            "label": "collectionsWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/upgradeable/NFTMarketplaceUpgradeable.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)20515_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)20515_storage)": {
            "label": "mapping(uint256 => struct NFTMarketplaceUpgradeable.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)20515_storage": {
            "label": "struct NFTMarketplaceUpgradeable.Listing",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7b0ae0aeaf76c8d5ca7c501354c2f3e858c711433db6fd38065d29325954d819": {
      "address": "0x0FfB94ba3BE2edDE3c0d8055DD030D048e173247",
      "txHash": "0xc27e3bb8ed7042c46144cc43e859ad6880cc5cfb3771042da4a387431d68f176",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "claimer",
            "type": "t_address",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:36"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "PFT",
            "type": "t_contract(IERC20Upgradeable)12485",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:38"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "tokenGrants",
            "type": "t_mapping(t_address,t_struct(Grant)22559_storage)",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:41"
          },
          {
            "contract": "VestingVaultUpgradeable",
            "label": "totalClaimedByAll",
            "type": "t_uint256",
            "src": "../project:/contracts/upgradeable/VestingVaultUpgradeable.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)12485": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_struct(Grant)22559_storage)": {
            "label": "mapping(address => struct VestingVaultUpgradeable.Grant)"
          },
          "t_struct(Grant)22559_storage": {
            "label": "struct VestingVaultUpgradeable.Grant",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vestingDuration",
                "type": "t_uint16"
              },
              {
                "label": "monthsClaimed",
                "type": "t_uint16"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7f01ab5cedd1636d1269d10363c4508b5510928774acb3b7ba4dbe53911796c": {
      "address": "0x608696BC4bDC5b74DDFB34415c9e26bEf4Dc1254",
      "txHash": "0xe7fff420c297336b1fb47102bba474c4d97a1dd1f9d2fb5165590d50c6f295c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:60"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/Initializable.sol:65"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ContextUpgradeable.sol:35"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/lib/upgradeable/OwnableUpgradeable.sol:100"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "lzEndpoint",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)12810",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:19"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "trustedRemoteLookup",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:20"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "minDstGasLookup",
            "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:21"
          },
          {
            "contract": "LzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/LzAppUpgradeable.sol:197"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "failedMessages",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "contract": "NonblockingLzAppUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/NonblockingLzAppUpgradeable.sol:115"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC165Upgradeable.sol:46"
          },
          {
            "contract": "OFT20CoreUpgradeable",
            "label": "useCustomAdapterParams",
            "type": "t_bool",
            "src": "../project:/contracts/lib/upgradeable/OFT20CoreUpgradeable.sol:17"
          },
          {
            "contract": "OFT20CoreUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/OFT20CoreUpgradeable.sol:176"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../project:/contracts/lib/upgradeable/ERC20Upgradeable.sol:444"
          },
          {
            "contract": "OFT20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/lib/upgradeable/OFT20Upgradeable.sol:80"
          },
          {
            "contract": "OPFTExternalUpgradeableTest",
            "label": "testNum",
            "type": "t_uint256",
            "src": "../project:/contracts/test/OPFTExternalUpgradeableTest.sol:10"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)12810": {
            "label": "contract ILayerZeroEndpointUpgradeable"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)"
          },
          "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
